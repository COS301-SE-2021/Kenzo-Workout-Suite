# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Nest.js CI
on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]
env:
  CI: 1
  PRISMA_TELEMETRY_INFORMATION: 'prisma-examples test-sql-server.yaml'
  
jobs:
  build:
    name: CI,Build,Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x, 14.x]
        os: [ubuntu-latest, windows-latest]
        
    services:
      # Label used to access the service container
      sql-server:
        # Docker Hub image
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: 'Pr1sm4_Pr1sm4'
        # Maps tcp port 1433 on service container to the host
        ports:
          - '1433:1433'
        options: --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SA_PASSWORD} -Q 'SELECT 1' || exit 1"  --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_URL: sqlserver://localhost:1433;database=prisma-demo;user=SA;password=Pr1sm4_Pr1sm4;trustServerCertificate=true;encrypt=true

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: docker://mcr.microsoft.com/mssql-tools
        with:
          entrypoint: /opt/mssql-tools/bin/sqlcmd
          args: '-S sql-server -U SA -P Pr1sm4_Pr1sm4 -i ./databases/sql-server/schema.sql'
          
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm CI(clean install)
        working-directory: ./nest-back
        run: npm ci
      - name: Prisma Introspect
        working-directory: ./nest-back
        run: npx prisma introspect
      - name: Prisma CP
        working-directory: ./nest-back
        run: cp prisma/schema-introspected-renamed.prisma prisma/schema.prisma
      - name: npx Prisma generate
        working-directory: ./nest-back
        run: npx prisma generate
      - name: npm build
        working-directory: ./nest-back
        run: npm run build --if-present
      - name: npm Workout Unit Tests
        working-directory: ./nest-back
        run: npm test

